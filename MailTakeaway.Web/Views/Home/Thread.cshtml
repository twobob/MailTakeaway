@model List<MailTakeaway.Core.Models.EmailIndexEntry>
@{
    ViewData["Title"] = "Conversation Thread";
    var rootMessage = Model.FirstOrDefault();
}

<div class="container mt-4">
    <div class="mb-3">
        <a href="@Url.Action("Index")" class="btn btn-secondary"><i class="bi bi-arrow-left"></i> Back to List</a>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0"><i class="bi bi-chat-dots"></i> Conversation Thread (@Model.Count messages)</h4>
            @if (rootMessage != null)
            {
                <small>@rootMessage.Subject</small>
            }
        </div>
    </div>

    @foreach (var email in Model)
    {
        var isReply = !string.IsNullOrEmpty(email.InReplyTo);
        var marginLeft = isReply ? "ms-4" : "";
        var borderColor = isReply ? "border-start border-info border-3" : "border-primary";
        
        <div class="card mb-3 @marginLeft @borderColor">
            <div class="card-header @(isReply ? "bg-light" : "bg-primary bg-opacity-10")">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        @if (isReply)
                        {
                            <i class="bi bi-reply-fill text-info"></i>
                        }
                        else
                        {
                            <i class="bi bi-envelope-fill text-primary"></i>
                        }
                        <strong>@email.From</strong>
                    </div>
                    <small class="text-muted">
                        @if (email.UtcDate.HasValue)
                        {
                            @email.UtcDate.Value.ToString("MMM dd, yyyy HH:mm")
                        }
                    </small>
                </div>
                <div class="text-muted small">
                    To: @email.To
                </div>
            </div>
            <div class="card-body">
                <h6 class="card-title">
                    @if (email.HasAttachments)
                    {
                        <i class="bi bi-paperclip text-primary"></i>
                    }
                    @email.Subject
                </h6>
                
                @if (!string.IsNullOrEmpty(email.HtmlBody))
                {
                    <iframe srcdoc="@email.HtmlBody.Replace("\"", "&quot;")" 
                            style="width: 100%; border: none; min-height: 300px;" 
                            onload="this.style.height = (this.contentWindow.document.documentElement.scrollHeight + 20) + 'px';">
                    </iframe>
                }
                else if (!string.IsNullOrEmpty(email.TextBody))
                {
                    <pre class="email-body-text" style="white-space: pre-wrap; font-family: inherit; margin: 0;">@email.TextBody</pre>
                }
                else
                {
                    <p class="card-text">@email.BodyPreview</p>
                }
                
                @if (email.HasAttachments && email.AttachmentData != null)
                {
                    <div class="mt-3 pt-3 border-top">
                        <h6><i class="bi bi-paperclip"></i> Attachments (@email.AttachmentCount)</h6>
                        <div class="row g-2">
                            @foreach (var attachment in email.AttachmentData)
                            {
                                var fileName = attachment.Key;
                                var attachmentData = attachment.Value;
                                var ext = System.IO.Path.GetExtension(fileName).ToLowerInvariant();
                                var isImage = new[] { ".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp" }.Contains(ext);
                                
                                <div class="col-md-6 col-lg-3">
                                    <div class="card h-100">
                                        @if (isImage)
                                        {
                                            <img src="data:@attachmentData.ContentType;base64,@Convert.ToBase64String(attachmentData.Data)" 
                                                 class="card-img-top" 
                                                 alt="@fileName"
                                                 style="max-height: 200px; object-fit: contain; padding: 5px;">
                                        }
                                        <div class="card-body p-2">
                                            <h6 class="card-title small text-truncate mb-1" title="@fileName">@fileName</h6>
                                            <p class="card-text small text-muted mb-1">@((attachmentData.Data.Length / 1024.0).ToString("N1")) KB</p>
                                            <a href="@Url.Action("Attachment", new { messageId = email.MessageId, fileName = fileName })" 
                                               class="btn btn-sm btn-primary" 
                                               target="_blank">
                                                <i class="bi bi-download"></i> Download
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                
                <div class="mt-3">
                    <a href="@Url.Action("Details", new { id = email.MessageId })" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-eye"></i> View Details
                    </a>
                </div>
            </div>
            <div class="card-footer text-muted small">
                Message ID: <code>@email.MessageId</code>
                @if (!string.IsNullOrEmpty(email.InReplyTo))
                {
                    <text><br />In-Reply-To: <code>@email.InReplyTo</code></text>
                }
            </div>
        </div>
    }
</div>

<style>
    .email-body-html {
        max-width: 100%;
        overflow-x: auto;
    }
    .email-body-html img {
        max-width: 100%;
        height: auto;
    }
    .email-body-html table {
        max-width: 100%;
    }
</style>
